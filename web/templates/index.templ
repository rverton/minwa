package templates

import "minwa/internal/database"
import "slices"
import "fmt"

type EndpointWithChecks struct {
	Endpoint database.Endpoint
	Checks   []database.Check
}

func ChecksAverage(checks []database.Check) int64 {
	if len(checks) == 0 {
		return 0
	}
	var sum int64
	for _, check := range checks {
		sum += check.ResponseTime
	}
	return sum / int64(len(checks))
}

templ Index(endpoints []EndpointWithChecks) {
	@Layout() {
		<h1>Endpoint Watcher</h1>
		<form action="/" method="post">
			<div class="" style="display: flex; gap: 4px">
				<input
					type="url"
					name="url"
					placeholder="https://example.com"
					style="flex-grow: 1"
					required
				/>
				<select name="expected_status" class="col-md-4">
					<option value="200">200 OK</option>
					<option value="201">201 Created</option>
					<option value="204">204 No Content</option>
					<option value="400">400 Bad Request</option>
					<option value="401">401 Unauthorized</option>
					<option value="403">403 Forbidden</option>
					<option value="404">404 Not Found</option>
					<option value="500">500 Internal Server Error</option>
					<option value="502">502 Bad Gateway</option>
					<option value="503">503 Service Unavailable</option>
					<option value="504">504 Gateway Timeout</option>
				</select>
				<button type="submit" class="col-md-2">Watch</button>
			</div>
		</form>
		<div style="margin-top: 2em; font-family: var(--font-monospace); font-size: 0.8rem;">
			<ul style="padding-inline-start: 0">
				for _, e := range endpoints {
					<li style="display: flex; gap: 2px; align-items: center; margin-bottom:4px">
						<div style="flex-basis: 400px">
							{ e.Endpoint.Url } ({ fmt.Sprint(e.Endpoint.ExpectedStatus) })
						</div>
						<div style="flex-grow: 1; display: flex; gap: 3px; justify-content: right;">
							for _, check := range slices.Backward(e.Checks) {
								if check.Status == e.Endpoint.ExpectedStatus {
									<div class="status-green"></div>
								} else {
									<div class="status-gray"></div>
								}
							}
						</div>
						<div style="flex-basis: 80px; text-align: right">
							{ fmt.Sprintf("%v", ChecksAverage(e.Checks)) }ms
						</div>
						<div style="flex-basis: 20px; text-align: right">
							<form method="post" action={ templ.SafeURL(fmt.Sprintf("/%v/delete", e.Endpoint.ID)) }>
								<button
									style="background: 0; border: 0"
									type="submit"
								>&times;</button>
							</form>
						</div>
					</li>
				}
			</ul>
		</div>
	}
}
